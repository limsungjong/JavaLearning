Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4e2f1a19-9fa6-4d91-b1e2-2ec902026de1\" name=\"변경\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2P0XzDVb7nzUInaDLkHcMa2ywxk\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"애플리케이션 수준\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"디폴트 작업\">\r\n      <changelist id=\"4e2f1a19-9fa6-4d91-b1e2-2ec902026de1\" name=\"변경\" comment=\"\" />\r\n      <created>1682595235586</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1682595235586</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3fe5ffbd2f08bcb5ef5a0fc4782535c382eaaa3f)
+++ b/.idea/workspace.xml	(date 1687919759661)
@@ -1,25 +1,70 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
   <component name="ChangeListManager">
-    <list default="true" id="4e2f1a19-9fa6-4d91-b1e2-2ec902026de1" name="변경" comment="" />
+    <list default="true" id="4e2f1a19-9fa6-4d91-b1e2-2ec902026de1" name="변경" comment="Concept에 Copy 예제 각각 추가">
+      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/ArraysLearning/ArraysStream.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/CodingTest/MinimumRectangle.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/CodingTest/NumberAndAdditionOfMineralWater.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/CollectionsInterface/Example1.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/StringLearning/StringLearning.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/CodingTest/IntegerDescending.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/CodingTest/IntegerDescending.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/CodingTest/OverPainting.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/CodingTest/OverPainting.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Concept/MethodRef.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Concept/MethodRef.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/DataStructure/SingleLinkedList.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DataStructure/SingleLinkedList.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Sort/InsertionSort.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Sort/InsertionSort.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Sort/SelectionSort.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Sort/SelectionSort.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
   </component>
   <component name="ProjectId" id="2P0XzDVb7nzUInaDLkHcMa2ywxk" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
+  <component name="RecentsManager">
+    <key name="CopyClassDialog.RECENTS_KEY">
+      <recent name="CodingTest" />
+    </key>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="애플리케이션 수준" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="디폴트 작업">
@@ -28,7 +73,349 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1682595235586</updated>
+      <workItem from="1682595236812" duration="4356000" />
+      <workItem from="1682644613181" duration="1173000" />
+      <workItem from="1682657831669" duration="629000" />
+      <workItem from="1682740135186" duration="199000" />
+      <workItem from="1682743863112" duration="1003000" />
+      <workItem from="1683255080715" duration="1407000" />
+      <workItem from="1683265780188" duration="4012000" />
+      <workItem from="1683346647642" duration="2008000" />
+      <workItem from="1683448648578" duration="13752000" />
+      <workItem from="1683503329337" duration="1312000" />
+      <workItem from="1683512782899" duration="3558000" />
+      <workItem from="1683527554060" duration="595000" />
+      <workItem from="1683610802776" duration="1195000" />
+      <workItem from="1683613946583" duration="2840000" />
+      <workItem from="1683626072679" duration="74000" />
+      <workItem from="1683690112807" duration="5902000" />
+      <workItem from="1683697201297" duration="1655000" />
+      <workItem from="1683715140469" duration="6100000" />
+      <workItem from="1683725647784" duration="12000" />
+      <workItem from="1683763999635" duration="646000" />
+      <workItem from="1684061869572" duration="2908000" />
+      <workItem from="1684131245028" duration="8546000" />
+      <workItem from="1684152630012" duration="364000" />
+      <workItem from="1684204782782" duration="3962000" />
+      <workItem from="1684366353250" duration="4356000" />
+      <workItem from="1684453642191" duration="1595000" />
+      <workItem from="1684466622120" duration="12435000" />
+      <workItem from="1684565969227" duration="1641000" />
+      <workItem from="1684568250624" duration="12000" />
+      <workItem from="1684686532151" duration="3677000" />
+      <workItem from="1684718109012" duration="1076000" />
+      <workItem from="1684841060619" duration="780000" />
+      <workItem from="1684845458093" duration="5150000" />
+      <workItem from="1684899119835" duration="15612000" />
+      <workItem from="1684969371142" duration="7052000" />
+      <workItem from="1684984661205" duration="7612000" />
+      <workItem from="1684995643362" duration="8798000" />
+      <workItem from="1685022261717" duration="247000" />
+      <workItem from="1685071599598" duration="1420000" />
+      <workItem from="1685082502150" duration="4997000" />
+      <workItem from="1685097162292" duration="12253000" />
+      <workItem from="1685164203202" duration="8097000" />
+      <workItem from="1685181466952" duration="6697000" />
+      <workItem from="1685243496561" duration="69000" />
+      <workItem from="1685247552681" duration="1470000" />
+      <workItem from="1685256568619" duration="1353000" />
+      <workItem from="1685273674908" duration="2008000" />
+      <workItem from="1685338561698" duration="10382000" />
+      <workItem from="1685432564584" duration="1228000" />
+      <workItem from="1685501612896" duration="1188000" />
+      <workItem from="1685618990813" duration="7585000" />
+      <workItem from="1685701392164" duration="27000" />
+      <workItem from="1685716472111" duration="3385000" />
+      <workItem from="1685753953409" duration="629000" />
+      <workItem from="1685763182834" duration="761000" />
+      <workItem from="1685765650789" duration="47000" />
+      <workItem from="1685766542918" duration="5484000" />
+      <workItem from="1685890561506" duration="1948000" />
+      <workItem from="1685925130258" duration="10415000" />
+      <workItem from="1685958687580" duration="798000" />
+      <workItem from="1685961426859" duration="1832000" />
+      <workItem from="1686014107951" duration="9218000" />
+      <workItem from="1686045582270" duration="694000" />
+      <workItem from="1686317725644" duration="673000" />
+      <workItem from="1686396946737" duration="2000" />
+      <workItem from="1687856390429" duration="3266000" />
+      <workItem from="1687860812262" duration="833000" />
+      <workItem from="1687904654062" duration="1385000" />
+      <workItem from="1687915876552" duration="2645000" />
+    </task>
+    <task id="LOCAL-00001" summary="create BubbleSort, SelectionSort">
+      <created>1683256299046</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1683256299046</updated>
+    </task>
+    <task id="LOCAL-00002" summary="create InsertionSort">
+      <created>1683273465074</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1683273465074</updated>
+    </task>
+    <task id="LOCAL-00003" summary="프로그래머스 코딩테스트 solution 추가&#10;level 1 : 크기가 작은 문자열 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/147355">
+      <created>1683504266588</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1683504266588</updated>
+    </task>
+    <task id="LOCAL-00004" summary="프로그래머스 코딩테스트 solution 추가&#10;level 1 : 크기가 작은 문자열 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/147355">
+      <created>1683513151548</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1683513151548</updated>
+    </task>
+    <task id="LOCAL-00005" summary="프로그래머스 코딩테스트 solution 설명추가&#10;level 1 : 크기가 작은 문자열 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/147355">
+      <created>1683514730801</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1683514730801</updated>
+    </task>
+    <task id="LOCAL-00006" summary="프로그래머스 코딩테스트 solution 추억 점수 설명 추가, 테스트 케이스 추가&#10;level 1 : 크기가 작은 문자열 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/176963">
+      <created>1683514773895</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1683514773895</updated>
+    </task>
+    <task id="LOCAL-00007" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 가장 가까운 글자 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/142086">
+      <created>1683616773741</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1683616773741</updated>
+    </task>
+    <task id="LOCAL-00008" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 과일 장수 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/135808">
+      <created>1683722164859</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1683722164859</updated>
+    </task>
+    <task id="LOCAL-00009" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 가운데 글자 가져오기 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/12903">
+      <created>1684078855195</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1684078855195</updated>
+    </task>
+    <task id="LOCAL-00010" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 푸드 파이트 대회 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/134240">
+      <created>1684211587249</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1684211587249</updated>
+    </task>
+    <task id="LOCAL-00011" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 삼총사 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/131705">
+      <created>1684376250455</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1684376250455</updated>
+    </task>
+    <task id="LOCAL-00012" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 콜라 문제 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/132267">
+      <created>1684488076862</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1684488076862</updated>
+    </task>
+    <task id="LOCAL-00013" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 약수의 합 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/12928">
+      <created>1684489452064</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1684489452064</updated>
+    </task>
+    <task id="LOCAL-00014" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 문자열을 정수로 바꾸기&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12925">
+      <created>1684567082612</created>
+      <option name="number" value="00014" />
+      <option name="presentableId" value="LOCAL-00014" />
+      <option name="project" value="LOCAL" />
+      <updated>1684567082612</updated>
+    </task>
+    <task id="LOCAL-00015" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 문자열을 정수로 바꾸기&#10;설명 변경&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12925">
+      <created>1684567106460</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1684567106460</updated>
+    </task>
+    <task id="LOCAL-00016" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 정수 내림차순으로 배치하기&#10;설명 변경&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12933">
+      <created>1684690472014</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1684690472014</updated>
+    </task>
+    <task id="LOCAL-00017" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 나머지가 1이 되는 수 찾기&#10;설명 변경&#10;https://school.programmers.co.kr/learn/courses/30/lessons/87389">
+      <created>1684841839919</created>
+      <option name="number" value="00017" />
+      <option name="presentableId" value="LOCAL-00017" />
+      <option name="project" value="LOCAL" />
+      <updated>1684841839919</updated>
+    </task>
+    <task id="LOCAL-00018" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 소수 만들기&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12977">
+      <created>1684937553271</created>
+      <option name="number" value="00018" />
+      <option name="presentableId" value="LOCAL-00018" />
+      <option name="project" value="LOCAL" />
+      <updated>1684937553271</updated>
+    </task>
+    <task id="LOCAL-00019" summary="Algorithms 패키지 추가, 소수 구하는 알고리즘 추가">
+      <created>1685006709502</created>
+      <option name="number" value="00019" />
+      <option name="presentableId" value="LOCAL-00019" />
+      <option name="project" value="LOCAL" />
+      <updated>1685006709502</updated>
     </task>
+    <task id="LOCAL-00020" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 소수 만들기&#10;클래스 이름 변경&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12977">
+      <created>1685006760018</created>
+      <option name="number" value="00020" />
+      <option name="presentableId" value="LOCAL-00020" />
+      <option name="project" value="LOCAL" />
+      <updated>1685006760018</updated>
+    </task>
+    <task id="LOCAL-00021" summary="ArraysLearning 패키지 추가, ArraysSort 클래스 추가">
+      <created>1685006835532</created>
+      <option name="number" value="00021" />
+      <option name="presentableId" value="LOCAL-00021" />
+      <option name="project" value="LOCAL" />
+      <updated>1685006835532</updated>
+    </task>
+    <task id="LOCAL-00022" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 소수 만들기&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12921">
+      <created>1685007256545</created>
+      <option name="number" value="00022" />
+      <option name="presentableId" value="LOCAL-00022" />
+      <option name="project" value="LOCAL" />
+      <updated>1685007256545</updated>
+    </task>
+    <task id="LOCAL-00023" summary="Array 예제 추가">
+      <created>1685120328305</created>
+      <option name="number" value="00023" />
+      <option name="presentableId" value="LOCAL-00023" />
+      <option name="project" value="LOCAL" />
+      <updated>1685120328305</updated>
+    </task>
+    <task id="LOCAL-00024" summary="Arrays 패키지 : 예제 추가 , 예제 이름 변경">
+      <created>1685164561607</created>
+      <option name="number" value="00024" />
+      <option name="presentableId" value="LOCAL-00024" />
+      <option name="project" value="LOCAL" />
+      <updated>1685164561607</updated>
+    </task>
+    <task id="LOCAL-00025" summary="Arrays sort, copy update">
+      <created>1685167450078</created>
+      <option name="number" value="00025" />
+      <option name="presentableId" value="LOCAL-00025" />
+      <option name="project" value="LOCAL" />
+      <updated>1685167450078</updated>
+    </task>
+    <task id="LOCAL-00026" summary="프로그래머스 코딩테스트 solution&#10;level 1 : x만큼 간격이 있는 n개의 숫자&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12954">
+      <created>1685248808258</created>
+      <option name="number" value="00026" />
+      <option name="presentableId" value="LOCAL-00026" />
+      <option name="project" value="LOCAL" />
+      <updated>1685248808260</updated>
+    </task>
+    <task id="LOCAL-00027" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 없는 숫자 더하기&#10;https://school.programmers.co.kr/learn/courses/30/lessons/86051">
+      <created>1685433676897</created>
+      <option name="number" value="00027" />
+      <option name="presentableId" value="LOCAL-00027" />
+      <option name="project" value="LOCAL" />
+      <updated>1685433676898</updated>
+    </task>
+    <task id="LOCAL-00028" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 덧칠하기&#10;https://school.programmers.co.kr/learn/courses/30/lessons/161989">
+      <created>1685629322153</created>
+      <option name="number" value="00028" />
+      <option name="presentableId" value="LOCAL-00028" />
+      <option name="project" value="LOCAL" />
+      <updated>1685629322153</updated>
+    </task>
+    <task id="LOCAL-00029" summary="프로그래머스 코딩테스트 solution&#10;level 1 : 예산&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12982">
+      <created>1685719881401</created>
+      <option name="number" value="00029" />
+      <option name="presentableId" value="LOCAL-00029" />
+      <option name="project" value="LOCAL" />
+      <updated>1685719881401</updated>
+    </task>
+    <task id="LOCAL-00030" summary="ArraysSort 예제 추가&#10;ASC, DESC, DESC2">
+      <created>1685769317050</created>
+      <option name="number" value="00030" />
+      <option name="presentableId" value="LOCAL-00030" />
+      <option name="project" value="LOCAL" />
+      <updated>1685769317050</updated>
+    </task>
+    <task id="LOCAL-00031" summary="Concept에 ComparableExam, ComparatorExam 예제 각각 추가">
+      <created>1685958737838</created>
+      <option name="number" value="00031" />
+      <option name="presentableId" value="LOCAL-00031" />
+      <option name="project" value="LOCAL" />
+      <updated>1685958737838</updated>
+    </task>
+    <task id="LOCAL-00032" summary="Concept에 MethodRef, ConstructorRef 예제 각각 추가">
+      <created>1686033356105</created>
+      <option name="number" value="00032" />
+      <option name="presentableId" value="LOCAL-00032" />
+      <option name="project" value="LOCAL" />
+      <updated>1686033356105</updated>
+    </task>
+    <task id="LOCAL-00033" summary="Concept에 Copy 예제 각각 추가">
+      <created>1686317774480</created>
+      <option name="number" value="00033" />
+      <option name="presentableId" value="LOCAL-00033" />
+      <option name="project" value="LOCAL" />
+      <updated>1686317774480</updated>
+    </task>
+    <option name="localTasksCounter" value="34" />
     <servers />
   </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 가운데 글자 가져오기 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/12903" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 푸드 파이트 대회 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/134240" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 삼총사 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/131705" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 콜라 문제 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/132267" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 약수의 합 &#10;https://school.programmers.co.kr/learn/courses/30/lessons/12928" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 문자열을 정수로 바꾸기&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12925" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 문자열을 정수로 바꾸기&#10;설명 변경&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12925" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 정수 내림차순으로 배치하기&#10;설명 변경&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12933" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 나머지가 1이 되는 수 찾기&#10;설명 변경&#10;https://school.programmers.co.kr/learn/courses/30/lessons/87389" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 소수 만들기&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12977" />
+    <MESSAGE value="Algorithms 패키지 추가, 소수 구하는 알고리즘 추가" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 소수 만들기&#10;클래스 이름 변경&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12977" />
+    <MESSAGE value="ArraysLearning 패키지 추가, ArraysSort 클래스 추가" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 소수 만들기&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12921" />
+    <MESSAGE value="Array 예제 추가" />
+    <MESSAGE value="Arrays 패키지 : 예제 추가 , 예제 이름 변경" />
+    <MESSAGE value="Arrays sort, copy update" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : x만큼 간격이 있는 n개의 숫자&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12954" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 없는 숫자 더하기&#10;https://school.programmers.co.kr/learn/courses/30/lessons/86051" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 덧칠하기&#10;https://school.programmers.co.kr/learn/courses/30/lessons/161989" />
+    <MESSAGE value="프로그래머스 코딩테스트 solution&#10;level 1 : 예산&#10;https://school.programmers.co.kr/learn/courses/30/lessons/12982" />
+    <MESSAGE value="ArraysSort 예제 추가&#10;ASC, DESC, DESC2" />
+    <MESSAGE value="Concept에 ComparableExam, ComparatorExam 예제 각각 추가" />
+    <MESSAGE value="Concept에 MethodRef, ConstructorRef 예제 각각 추가" />
+    <MESSAGE value="Concept에 Copy 예제 각각 추가" />
+    <option name="LAST_COMMIT_MESSAGE" value="Concept에 Copy 예제 각각 추가" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <breakpoint enabled="true" type="java-exception">
+          <properties class="java.lang.ArrayIndexOutOfBoundsException" package="java.lang" />
+          <option name="timeStamp" value="1" />
+        </breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
 </project>
\ No newline at end of file
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
new file mode 100644
--- /dev/null	(date 1682607132101)
+++ b/README.md	(date 1682607132101)
@@ -0,0 +1,1 @@
+Java Learning Repo \
Index: src/CodingTest/IntegerDescending.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CodingTest;\r\nimport java.util.Arrays;\r\n/*\r\n    프로그래머스 level : 1\r\n    https://school.programmers.co.kr/learn/courses/30/lessons/12933\r\n    정수 내림차순으로 배치하기\r\n\r\n    함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다.\r\n\r\n    case 1\r\n    n = 118372\r\n    return 873211\r\n */\r\npublic class IntegerDescending {\r\n    public static void main(String[] args) {\r\n        System.out.println(solution(118372));\r\n    }\r\n\r\n    public static long solution(long n) {\r\n        char[] chars = String.valueOf(n).toCharArray();\r\n        Arrays.sort(chars);\r\n        String result = new StringBuilder(new String(chars)).reverse().toString();\r\n        return Long.parseLong(result);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/CodingTest/IntegerDescending.java b/src/CodingTest/IntegerDescending.java
--- a/src/CodingTest/IntegerDescending.java	(revision 3fe5ffbd2f08bcb5ef5a0fc4782535c382eaaa3f)
+++ b/src/CodingTest/IntegerDescending.java	(date 1684851110566)
@@ -1,5 +1,8 @@
 package CodingTest;
+
 import java.util.Arrays;
+import java.util.Comparator;
+
 /*
     프로그래머스 level : 1
     https://school.programmers.co.kr/learn/courses/30/lessons/12933
@@ -13,13 +16,25 @@
  */
 public class IntegerDescending {
     public static void main(String[] args) {
-        System.out.println(solution(118372));
+        System.out.println(solution(35124687));
     }
 
-    public static long solution(long n) {
-        char[] chars = String.valueOf(n).toCharArray();
-        Arrays.sort(chars);
-        String result = new StringBuilder(new String(chars)).reverse().toString();
-        return Long.parseLong(result);
+    public static int solution(int n) {
+
+        String numberToStr = String.valueOf(n);
+        Character[] arr = new Character[numberToStr.length()];
+        for (int i = 0; i < numberToStr.length(); i++) {
+            arr[i] = numberToStr.charAt(i);
+        }
+
+        Arrays.sort(arr, Comparator.reverseOrder());
+
+        StringBuilder x = new StringBuilder();
+        for(Character v : arr) {
+            x.append(v);
+        }
+        int answer = Integer.parseInt(x.toString());
+        System.out.println(answer);
+        return answer;
     }
 }
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1684906899062)
+++ b/.idea/uiDesigner.xml	(date 1684906899062)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 3fe5ffbd2f08bcb5ef5a0fc4782535c382eaaa3f)
+++ b/.idea/misc.xml	(date 1687856404967)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: src/Concept/MethodRef.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Concept;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class MethodRef {\r\n    public static void main(String[] args) {\r\n        String str = \"51245\";\r\n        List<Integer> collect = Arrays.stream(str.split(\"\")).map(Integer::parseInt).collect(Collectors.toList());\r\n        System.out.println(collect);\r\n        // 출력 : [5, 1, 2, 4, 5]\r\n\r\n        List<Idol> idolList = Arrays.asList(new Idol(\"newJeans\"), new Idol(\"twice\"), new Idol(\"fifty\"));\r\n        String idols = idolList.stream().map(Idol::getName).collect(Collectors.joining(\" \"));\r\n        System.out.println(idols);\r\n        // 출력 : newJeans twice fifty\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Concept/MethodRef.java b/src/Concept/MethodRef.java
--- a/src/Concept/MethodRef.java	(revision 3fe5ffbd2f08bcb5ef5a0fc4782535c382eaaa3f)
+++ b/src/Concept/MethodRef.java	(date 1686045659004)
@@ -6,11 +6,15 @@
 
 public class MethodRef {
     public static void main(String[] args) {
+        // 문자열 51245의 값을 List로 변환하는 과정에서 map으로 변환하는 과정에서 Integer의 parseInt를 참조
         String str = "51245";
         List<Integer> collect = Arrays.stream(str.split("")).map(Integer::parseInt).collect(Collectors.toList());
+        String[] split = str.split("");
+        System.out.println(Arrays.toString(split));
         System.out.println(collect);
         // 출력 : [5, 1, 2, 4, 5]
 
+        // List에 Idol 클래스를 담고 클래스의 이름으로 문자열을 만들기 위해 map으로 Idol.getName을 이용하여 문자열을 만든다
         List<Idol> idolList = Arrays.asList(new Idol("newJeans"), new Idol("twice"), new Idol("fifty"));
         String idols = idolList.stream().map(Idol::getName).collect(Collectors.joining(" "));
         System.out.println(idols);
Index: src/CollectionsInterface/Example1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/CollectionsInterface/Example1.java b/src/CollectionsInterface/Example1.java
new file mode 100644
--- /dev/null	(date 1684472072823)
+++ b/src/CollectionsInterface/Example1.java	(date 1684472072823)
@@ -0,0 +1,54 @@
+package CollectionsInterface;
+
+import java.util.*;
+
+public class Example1 {
+    public static void main(String[] args) {
+        ArrayList<Integer> list = new ArrayList<>();
+        Stack<Integer> stack = new Stack<>();
+        // 0 ~ 9까지 채움
+        for (int i = 0; i < 10; i++) {
+            list.add(i);
+            stack.add(i);
+        }
+
+        // 최대값 max 메소드, 최소값 min 메소드
+        System.out.println("list max() : " + Collections.max(list));
+        System.out.println("stack min() : " + Collections.min(stack));
+
+        // sort()
+        Collections.sort(stack);// 오름차순
+        Collections.reverse(stack); // 내림차순
+        Collections.sort(stack, Collections.reverseOrder()); // 내림차순
+        System.out.print("역순 출력: ");
+        for (int i : stack) {
+            System.out.print(i + " ");
+        }
+
+        System.out.println();
+        // 섞기(shuffling) 랜덤하게 섞는다
+        Collections.shuffle(stack);
+        System.out.print("랜덤 출력: ");
+        for (int i : stack) {
+            System.out.print(i + " ");
+        }
+
+        System.out.println();
+        // binarySearch() -> 해당값의 index를 반환(실패시 -1 반환)
+        // 오름차순 정렬이 되어있어야 사용가능핟.
+        Collections.sort(stack); // 오름차순
+        System.out.print("정방향 정렬: ");
+        for (int i : stack) {
+            System.out.print(i + " ");
+        }
+        System.out.println();
+        System.out.print("이진 탐색 5 값의 위치: " + Collections.binarySearch(stack,5));
+
+        System.out.println();
+        // 두 리스트가 다른지 확인 disjoint
+        // 두 리스트중 공통 값이 있으면 false
+        ArrayList<Integer> list2 = new ArrayList<>(Arrays.asList(99,98));
+        System.out.println("list가 완전히 다른가? : "+ Collections.disjoint(list, list2)); // true
+        System.out.println("list가 완전히 다른가? : "+ Collections.disjoint(list, stack)); // false
+    }
+}
Index: src/ArraysLearning/ArraysStream.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ArraysLearning/ArraysStream.java b/src/ArraysLearning/ArraysStream.java
new file mode 100644
--- /dev/null	(date 1685165269326)
+++ b/src/ArraysLearning/ArraysStream.java	(date 1685165269326)
@@ -0,0 +1,4 @@
+package ArraysLearning;
+
+public class ArraysStream {
+}
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
new file mode 100644
--- /dev/null	(date 1684062840836)
+++ b/src/Main.java	(date 1684062840836)
@@ -0,0 +1,14 @@
+import java.lang.String;
+public class Main {
+    public static void main(String[] args) {
+        String s = "qwer";
+        String x = "abcde";
+
+        System.out.println(zxc(s));
+        System.out.println(zxc(x));
+    }
+
+    public static String zxc(String s) {
+        return s.length() % 2 == 0 ? s.charAt(s.length() / 2 - 1) + String.valueOf(s.charAt((s.length() / 2))) : String.valueOf(s.charAt(s.length() / 2));
+    }
+}
Index: src/StringLearning/StringLearning.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/StringLearning/StringLearning.java b/src/StringLearning/StringLearning.java
new file mode 100644
--- /dev/null	(date 1684995669396)
+++ b/src/StringLearning/StringLearning.java	(date 1684995669396)
@@ -0,0 +1,96 @@
+package StringLearning;
+
+import java.util.Arrays;
+
+public class StringLearning {
+    public static void main(String[] args) {
+        StringMethod();
+        StringBuilderAndBufferMethod();
+    }
+    public static void StringMethod() {
+        String string = "String";
+        int length = string.length(); // 6
+        // 해당하는 문자열의 길이를 반환
+
+        char charAt = string.charAt(1); // "t"
+        // 인자로 전달한 index의 문자를 반환
+//        char noCharAt = string.charAt(10); // java.lang.StringIndexOutOfBoundsException : String index out of range
+        // 만약 인자로 전달한 index가 문자열 길이를 넘으면 Exception 발생
+
+        String str1 = string.substring(1); // "tring"
+        // 첫 번째 인자 index부터 끝까지 반환
+        String str2 = string.substring(1,5); // "trin"
+        // 두 번째 인자까지 전달하면 해당하는 index까지의 문자열만 반환
+//        String noSearch = string.substring(10); // java.lang.StringIndexOutOfBoundsException : String index out of range
+        // 만약 인자로 전달한 index가 문자열 길이를 넘으면 Exception 발생
+
+        String string2 = "string";
+        String string3 = "string3";
+        boolean equal1 = string.equals(string2); // true
+        boolean equal2 = string.equals(string3); // false
+        // 인자로 전달한 값과 같은지 확인
+
+        boolean contains1 = string.contains("X"); // false
+        boolean contains2 = string.contains("ring"); // true
+        // 인자로 전달한 CharSequence가 포함되어 있는지 확인
+
+        String upperString = string.toUpperCase(); // "STRING"
+        String lowerString = string.toLowerCase(); // "string"
+        // 각각 upper는 문자열 전체를 대문자로, lower는 문자열 전체를 소문자로 변환
+
+        String replString1 = string.replace("ring","rong"); // "Strong"
+        String replString2 = string.replace('v','o'); // "Sting"
+        // 첫 번째 인자로 전달한 문자 또는 문자열이 있다면 두 번째로 전달한 문자열로 변환
+        // 만약 없다면 따로 변화는 없음
+        
+        char[] charArr = string.toCharArray(); // [S, t, r, i, n, g]
+        // 문자열을 한 글자씩 char[] 형태로 변환
+
+        String strConcat = string.concat("StrConcat"); // StringStrConcat
+        // 문자열 뒤에 인자로 전달한 문자열을 이어 붙임
+
+        int index = string.indexOf("in"); // 3
+        // 전달한 인자가 있는 index값을 반환
+        int noIndex = string.indexOf("q"); // -1
+        // 전달한 인자에 해당하는 값이 없다면 -1 반환
+        int lastIndex = string.lastIndexOf("g"); // 5
+        // 전달한 인자를 뒤에서부터 찾아서 index값을 반환
+    }
+
+    public static void StringBuilderAndBufferMethod() {
+        StringBuilder stringBuilder = new StringBuilder();
+
+        stringBuilder.append("b"); // b
+        stringBuilder.append("u"); // bu
+        stringBuilder.append("i"); // bui
+        stringBuilder.append("l"); // buil
+        stringBuilder.append("d"); // build
+        stringBuilder.append("er"); // builder
+        // 뒤에 인자로 받은 문자열을 추가한다.
+
+        stringBuilder.delete(0,2); // ilder
+        // 첫 번째 인자로 받은 index부터 두 번째 인자로 받은 index까지 문자를 삭제
+//        stringBuilder.delete(12,2); // java.lang.StringIndexOutOfBoundsException : start 12, end 2, length 7
+        // 만약 인자로 전달한 index가 문자열 길이를 넘으면 Exception 발생
+
+
+        stringBuilder.replace(0,stringBuilder.length(),"builder");
+        stringBuilder.insert(0,"str "); // builder
+        // 첫 번째 인자로 받은 index 뒤에 두 번째 인자로 받은 문자열을 삽입
+
+//        stringBuilder.insert(12,"str ");
+        // java.lang.StringIndexOutOfBoundsException : offset 12,length 7
+        // 만약 인자로 전달한 index가 문자열 길이를 넘으면 Exception 발생
+
+//        stringBuilder.reverse(); // redliub
+        // 문자열을 뒤집는다.
+
+        stringBuilder.replace(0,stringBuilder.length() + 1,"new String Builder"); // new String Builder
+//        // 첫 번째 인자로 받은 index부터 두 번째 인자로 받은 인덱스까지 세 번째 인자의 값으로 대체
+//        System.out.println(stringBuilder);
+
+//        stringBuilder.replace(12,stringBuilder.length() + 1,"new String Builder"); // new String Builder
+        // java.lang.StringIndexOutOfBoundsException: start 12, end 11, length 11
+        // 만약 인자로 전달한 index가 문자열 길이를 넘으면 Exception 발생
+    }
+}
Index: src/DataStructure/SingleLinkedList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package DataStructure;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class SingleLinkedList {\r\n    public static void main(String[] args) {\r\n        SingleLinkedList x = new SingleLinkedList();\r\n        x.append(1);\r\n        x.append(2);\r\n        x.append(3);\r\n        x.append(4);\r\n        x.append(5);\r\n        x.printNode();\r\n        x.delete(5);\r\n        x.delete(4);\r\n        x.delete(1);\r\n        System.out.println();\r\n        x.printNode();\r\n    }\r\n    Node header = null;\r\n\r\n    SingleLinkedList() {\r\n        this.header = new Node(null);\r\n    }\r\n\r\n    class Node {\r\n        Object data = null;\r\n        Node next = null;\r\n\r\n        Node(Object data) {\r\n            this.data = data;\r\n        }\r\n    }\r\n\r\n    boolean append(Object data) {\r\n        Node n = header;\r\n        Node end = new Node(data);\r\n        boolean isComplete = false;\r\n        while (n.next != null) {\r\n            n = n.next;\r\n        }\r\n        n.next = end;\r\n        if (Objects.nonNull(n.next.data)) {\r\n            isComplete = true;\r\n        }\r\n        return isComplete;\r\n    }\r\n\r\n    Object delete(Object data) {\r\n        Object deleteData = null;\r\n        Node n = header;\r\n\r\n        while (n.next != null) {\r\n            if (Objects.equals(n.next.data, data)) {\r\n                deleteData = n.data;\r\n                n.next = n.next.next;\r\n            } else {\r\n                n = n.next;\r\n            }\r\n        }\r\n\r\n        return deleteData;\r\n    }\r\n\r\n    void printNode() {\r\n        Node n = header.next;\r\n        while (n.next != null) {\r\n            System.out.print(n.data + \" -> \");\r\n            n = n.next;\r\n        }\r\n        System.out.print(n.data);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DataStructure/SingleLinkedList.java b/src/DataStructure/SingleLinkedList.java
--- a/src/DataStructure/SingleLinkedList.java	(revision 3fe5ffbd2f08bcb5ef5a0fc4782535c382eaaa3f)
+++ b/src/DataStructure/SingleLinkedList.java	(date 1683517242320)
@@ -1,25 +1,15 @@
 package DataStructure;
 
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
 import java.util.Objects;
+import java.util.stream.Collectors;
 
 public class SingleLinkedList {
-    public static void main(String[] args) {
-        SingleLinkedList x = new SingleLinkedList();
-        x.append(1);
-        x.append(2);
-        x.append(3);
-        x.append(4);
-        x.append(5);
-        x.printNode();
-        x.delete(5);
-        x.delete(4);
-        x.delete(1);
-        System.out.println();
-        x.printNode();
-    }
     Node header = null;
 
-    SingleLinkedList() {
+    public SingleLinkedList() {
         this.header = new Node(null);
     }
 
@@ -32,7 +22,7 @@
         }
     }
 
-    boolean append(Object data) {
+    public boolean append(Object data) {
         Node n = header;
         Node end = new Node(data);
         boolean isComplete = false;
@@ -46,7 +36,7 @@
         return isComplete;
     }
 
-    Object delete(Object data) {
+    public Object delete(Object data) {
         Object deleteData = null;
         Node n = header;
 
@@ -58,11 +48,10 @@
                 n = n.next;
             }
         }
-
         return deleteData;
     }
 
-    void printNode() {
+    public void printNode() {
         Node n = header.next;
         while (n.next != null) {
             System.out.print(n.data + " -> ");
@@ -70,4 +59,18 @@
         }
         System.out.print(n.data);
     }
+    /*
+    싱글 링크 리스트에서
+     */
+    public void removeDups() {
+        Node n = header;
+        while (n.next != null) {
+            Node r = n;
+            while (r.next != null) {
+                if (n.data == r.next.data) {
+                    r.next = r.next.next;
+                }
+            }
+        }
+    }
 }
Index: src/CodingTest/OverPainting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package CodingTest;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.Comparator;\r\n\r\n/*\r\n    프로그래머스 level : 1\r\n    https://school.programmers.co.kr/learn/courses/30/lessons/161989\r\n    덧칠하기\r\n\r\n    어느 학교에 페인트가 칠해진 길이가 n미터인 벽이 있습니다. 벽에 동아리 · 학회 홍보나 회사 채용 공고 포스터 등을 게시하기 위해 테이프로 붙였다가 철거할 때 떼는 일이 많고 그 과정에서 페인트가 벗겨지곤 합니다.\r\n    페인트가 벗겨진 벽이 보기 흉해져 학교는 벽에 페인트를 덧칠하기로 했습니다.\r\n\r\n    넓은 벽 전체에 페인트를 새로 칠하는 대신, 구역을 나누어 일부만 페인트를 새로 칠 함으로써 예산을 아끼려 합니다. 이를 위해 벽을 1미터 길이의 구역 n개로 나누고,\r\n    각 구역에 왼쪽부터 순서대로 1번부터 n번까지 번호를 붙였습니다. 그리고 페인트를 다시 칠해야 할 구역들을 정했습니다.\r\n\r\n    벽에 페인트를 칠하는 롤러의 길이는 m미터이고, 롤러로 벽에 페인트를 한 번 칠하는 규칙은 다음과 같습니다.\r\n\r\n    롤러가 벽에서 벗어나면 안 됩니다.\r\n    구역의 일부분만 포함되도록 칠하면 안 됩니다.\r\n    즉, 롤러의 좌우측 끝을 구역의 경계선 혹은 벽의 좌우측 끝부분에 맞춘 후 롤러를 위아래로 움직이면서 벽을 칠합니다. 현재 페인트를 칠하는 구역들을 완전히 칠한 후 벽에서 롤러를 떼며, 이를 벽을 한 번 칠했다고 정의합니다.\r\n\r\n    한 구역에 페인트를 여러 번 칠해도 되고 다시 칠해야 할 구역이 아닌 곳에 페인트를 칠해도 되지만 다시 칠하기로 정한 구역은 적어도 한 번 페인트칠을 해야 합니다.\r\n    예산을 아끼기 위해 다시 칠할 구역을 정했듯 마찬가지로 롤러로 페인트칠을 하는 횟수를 최소화하려고 합니다.\r\n\r\n    정수 n, m과 다시 페인트를 칠하기로 정한 구역들의 번호가 담긴 정수 배열 section이 매개변수로 주어질 때 롤러로 페인트칠해야 하는 최소 횟수를 return 하는 solution 함수를 작성해 주세요.\r\n\r\n    case 1\r\n    n = 8 , m = 4 , score = [2, 3, 6]\r\n    result = 2\r\n    // 2,3에서 1번 칠하고\r\n    // 6에서 1번 칠한다\r\n    // 총 2번\r\n\r\n    case 2\r\n    n = 5 , m = 4 , score = [1, 3]\r\n    result = 1\r\n    // 1,3에서 1번 칠한다\r\n    // 총 1번\r\n\r\n    case 3\r\n    n = 4 , m = 1 , score = [1, 2, 3, 4]\r\n    result = 4\r\n    // 각각 1,2,3,4로 1번 칠한다\r\n    // 총 4번\r\n */\r\npublic class OverPainting {\r\n    public static void main(String[] args) {\r\n        int case1n = 8;\r\n        int case1m = 4;\r\n        int[] case1section = {2, 3, 6};\r\n        System.out.println(solution(case1n, case1m, case1section));\r\n\r\n        int case2n = 5;\r\n        int case2m = 4;\r\n        int[] case2section = {1, 3};\r\n        System.out.println(solution(case2n, case2m, case2section));\r\n\r\n        int case3n = 4;\r\n        int case3m = 1;\r\n        int[] case3section = {1, 2, 3, 4};\r\n        System.out.println(solution(case3n, case3m, case3section));\r\n    }\r\n\r\n    public static int solution(int n, int m, int[] section) {\r\n        int answer = 0;\r\n        int max = 0;\r\n        for (int i : section) {\r\n            if (i > max) {\r\n                answer++;\r\n                max = i + m - 1;\r\n            }\r\n        }\r\n        return answer;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/CodingTest/OverPainting.java b/src/CodingTest/OverPainting.java
--- a/src/CodingTest/OverPainting.java	(revision 3fe5ffbd2f08bcb5ef5a0fc4782535c382eaaa3f)
+++ b/src/CodingTest/OverPainting.java	(date 1685716507388)
@@ -1,8 +1,4 @@
 package CodingTest;
-
-import java.util.Arrays;
-import java.util.Comparator;
-
 /*
     프로그래머스 level : 1
     https://school.programmers.co.kr/learn/courses/30/lessons/161989
Index: src/Sort/SelectionSort.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Sort;\r\n\r\nimport java.util.Arrays;\r\n\r\npublic class SelectionSort {\r\n    public static void main(String[] args) {\r\n        int[] data = new int[] {5,2,1,5,7,2,5,3};\r\n\r\n        for(int i = 0; i < data.length - 1; i++) {\r\n            int count = i;\r\n            for(int j = i + 1; j < data.length; j++) {\r\n                if(data[j] < data[count]) {\r\n                    count = j;\r\n                }\r\n            }\r\n            if(data[i] > data[count]) {\r\n                int temp = data[i];\r\n                data[i] = data[count];\r\n                data[count] = temp;\r\n            }\r\n        }\r\n        System.out.println(Arrays.toString(data));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Sort/SelectionSort.java b/src/Sort/SelectionSort.java
--- a/src/Sort/SelectionSort.java	(revision 3fe5ffbd2f08bcb5ef5a0fc4782535c382eaaa3f)
+++ b/src/Sort/SelectionSort.java	(date 1683457658083)
@@ -1,19 +1,19 @@
 package Sort;
 
-import java.util.Arrays;
+import java.util.*;
 
 public class SelectionSort {
     public static void main(String[] args) {
-        int[] data = new int[] {5,2,1,5,7,2,5,3};
+        int[] data = new int[]{5, 2, 1, 5, 7, 2, 5, 3};
 
-        for(int i = 0; i < data.length - 1; i++) {
+        for (int i = 0; i < data.length - 1; i++) {
             int count = i;
-            for(int j = i + 1; j < data.length; j++) {
-                if(data[j] < data[count]) {
+            for (int j = i + 1; j < data.length; j++) {
+                if (data[j] < data[count]) {
                     count = j;
                 }
             }
-            if(data[i] > data[count]) {
+            if (data[i] > data[count]) {
                 int temp = data[i];
                 data[i] = data[count];
                 data[count] = temp;
Index: src/Sort/InsertionSort.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Sort;\r\n\r\nimport java.util.Arrays;\r\n\r\npublic class InsertionSort {\r\n    public static void main(String[] args) {\r\n        int[] data = new int[] {5,2,5,6,1,2,5};\r\n\r\n        for(int i = 1; i < data.length; i++) {\r\n            int target = data[i];\r\n\r\n            int j = i - 1;\r\n\r\n            while (j >= 0 && target < data[j]) {\r\n                data[j + 1] = data[j];\r\n                j--;\r\n            }\r\n            data[j + 1] = target;\r\n        }\r\n        System.out.println(Arrays.toString(data));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Sort/InsertionSort.java b/src/Sort/InsertionSort.java
--- a/src/Sort/InsertionSort.java	(revision 3fe5ffbd2f08bcb5ef5a0fc4782535c382eaaa3f)
+++ b/src/Sort/InsertionSort.java	(date 1685349735696)
@@ -4,13 +4,55 @@
 
 public class InsertionSort {
     public static void main(String[] args) {
-        int[] data = new int[] {5,2,5,6,1,2,5};
+        ex();
+    }
 
-        for(int i = 1; i < data.length; i++) {
+    static void InsertionSortExam() {
+        int[] data = new int[]{8, 5, 2, 5, 6, 1, 2, 4, 5, 3, 7, 1, 9};
+        for (int i = 1; i < data.length; i++) {
+            // i는 1부터 시작하여 배열 끝까지 진행
             int target = data[i];
+            // 타겟에는 i번째 요소의 값을 선택
 
             int j = i - 1;
+            // j는 i - 1이다.
+
+            // while 진입 시점에서 target 값은 변하지 않는다.
+            // target 값을 기준으로 아래의 while 문으로 배열 전체를 확인
+            while (j >= 0 && target < data[j]) {
+                // target 값은 변하지 않으며 data[j]의 값만 변화시킨다
+                // 1. j 값은 0보다 크거나 같아야 하며 --> 배열 가장 밑에까지 내려온다
+                // 2. target 값은 data[j]보다 작아야 한다 --> 2가지 target 값과 data[j] 값을 비교한다
+
+                data[j + 1] = data[j];
+                // 위에 값을 비교하여 target 값 보다 작은 값이 있다면
+                // 3. j + 1 의 위치의 값에다가 j의 값을 대입한다.
+
+                j--;
+                // 4. j값을 하나 빼고 다시 위의 while 루틴을 시작
+            }
+
+            data[j + 1] = target;
+            // 5. 위의 while 문을 거치고 난 후 j + 1 자리에 target 값을 저장하고 다시 for 루틴 시작
+        }
+        System.out.println(Arrays.toString(data));
+        // 출력 : [1, 1, 2, 2, 3, 4, 5, 5, 5, 6, 7, 8, 9]
+    }
+
+    static void ex() {
+        int[] data = new int[]{8, 5, 2, 5, 6, 1, 2, 4, 5, 3, 7, 1, 9};
+
+        for (int i = 1; i < data.length; i++) {
+            // 2가지가 필요하다
+
+            int target = data[i];
+            // target 값은 배열에서 첫번 째가 아니고 두 번째 값부터 해야 한다.
 
+            int j = i - 1;
+            // j는 왜 i - 1?
+            // 배열 처음부터 돌아야 한다. 그렇기 때문에 j는 i - 1로 시작해야 한다.
+
+            // 이제 반복문 필요, 배열을 전체를 확인하면서 j의 값을 변화 시켜야 한다.
             while (j >= 0 && target < data[j]) {
                 data[j + 1] = data[j];
                 j--;
Index: src/CodingTest/MinimumRectangle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/CodingTest/MinimumRectangle.java b/src/CodingTest/MinimumRectangle.java
new file mode 100644
--- /dev/null	(date 1687859248332)
+++ b/src/CodingTest/MinimumRectangle.java	(date 1687859248332)
@@ -0,0 +1,23 @@
+package CodingTest;
+
+import java.util.Arrays;
+
+public class MinimumRectangle {
+    public static void main(String[] args) {
+        int[][] size = {{60, 50}, {30, 70}, {60, 30}, {80, 40}};
+        int a = 0;
+        int b = 0;
+
+        for (int i = 0; i < size.length; i++) {
+            if(a < Math.max(size[i][0], size[i][1])) {
+                a = Math.max(size[i][0], size[i][1]);
+            }
+            if(b < Math.min(size[i][0], size[i][1])) {
+                b = Math.min(size[i][0], size[i][1]);
+            }
+        }
+
+        System.out.println(a);
+        System.out.println(b);
+    }
+}
